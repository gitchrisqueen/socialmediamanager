[tool.poetry]
name = "socialmediamanager"
version = "0.1.0"
description = ""
authors = ["gitchrisqueen <christopher.queen@gmail.com>"]
readme = "README.md"
packages = [
    { include = "cqc_smm", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.11"
openai = "^1.10.0"
langchain = "^0.1.4"
langchain-community = "^0.0.16"
langchain-experimental = "^0.0.49"
langchain-openai = "^0.0.5"
langchainhub = "^0.1.14"
requests = "^2.31.0"
pexels-api = "^1.0.1"
python-unsplash = "^1.2.5"
mutagen = "^1.47.0"
pillow = "^10.2.0"
moviepy = "^1.0.3"
elevenlabs = "^0.2.27"
pytube = "^15.0.0"
bs4 = "^0.0.2"
feedparser = "^6.0.11"
ffmpeg = "^1.4"
accelerate = "^0.26.1"
diffusers = "^0.25.1"
jinja2 = "^3.1.3"
llama-cpp-python = "^0.2.36"
peft = "^0.7.1"
rich = "^13.7.0"
transformers = "^4.37.2"
pandas = "^2.2.0"
tabulate = "^0.9.0"
repl = "^1.0"
pyarrow = "^15.0.0"
selenium = "^4.17.2"
pyvirtualdisplay = "^3.0"
chromedriver-autoinstaller = "^0.6.4"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "^0.1.5"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
setuptools = "^67.6.1"
grandalf = "^0.8"


[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
# The only dependencies that should be added are
# dependencies used for running tests (e.g., pytest, freezegun, response).
# Any dependencies that do not meet that criteria will be removed.
pytest = "^7.3.0"
freezegun = "^1.2.2"
pytest-mock  = "^3.10.0"
syrupy = "^4.0.2"
pytest-watcher = "^0.3.4"
pytest-asyncio = "^0.21.1"
grandalf = "^0.8"
pytest-profiling = "^1.7.0"


[tool.poetry.group.test_integration]
optional = true
dependencies = {}

[tool.coverage.run]
omit = [
    "tests/*",
]

[tool.ruff.lint]
select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "I",  # isort
  "T201", # print
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = ["src"]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
#
# https://github.com/tophat/syrupy
# --snapshot-warn-unused    Prints a warning on unused snapshots rather than fail the test suite.
addopts = "--snapshot-warn-unused --strict-markers --strict-config --durations=5"
# Registering custom markers.
# https://docs.pytest.org/en/7.1.x/example/markers.html#registering-markers
markers = [
  "requires: mark tests as requiring a specific library",
  "asyncio: mark tests as requiring asyncio",
  "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"
